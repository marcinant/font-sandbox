{"version":3,"sources":["assets/scripts/main.min.js"],"names":["Boolean","window","location","hostname","match"],"mappings":"CAmBA,WACE,YAMkBA,SAAqC,cAA7BC,OAAOC,SAASC,UAET,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  // if ('serviceWorker' in navigator &&\n  //     (window.location.protocol === 'https:' || isLocalhost)) {\n  //   navigator.serviceWorker.register('service-worker.js')\n  //   .then(function(registration) {\n  //     // Check to see if there's an updated version of service-worker.js with\n  //     // new files to cache:\n  //     // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n  //     if (typeof registration.update === 'function') {\n  //       registration.update();\n  //     }\n\n  //     // updatefound is fired if service-worker.js changes.\n  //     registration.onupdatefound = function() {\n  //       if (navigator.serviceWorker.controller) {\n  //         var installingWorker = registration.installing;\n\n  //         installingWorker.onstatechange = function() {\n  //           switch (installingWorker.state) {\n  //             case 'installed':\n  //               break;\n  //             case 'redundant':\n  //               throw new Error('The installing ' +\n  //                               'service worker became redundant.');\n  //             default:\n  //               // Ignore\n  //           }\n  //         };\n  //       }\n  //     };\n  //   }).catch(function(e) {\n  //     console.error('Error during service worker registration:', e);\n  //   });\n  // }\n\n  // Your custom JavaScript goes here\n})();\n"],"sourceRoot":"/source/"}