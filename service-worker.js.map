{"version":3,"sources":["service-worker.js"],"names":["deleteAllCaches","caches","keys","then","cacheNames","Promise","all","map","cacheName","importScripts","PrecacheConfig","CacheNamePrefix","self","registration","scope","IgnoreUrlParametersMatching","addDirectoryIndex","originalUrl","index","url","URL","pathname","slice","toString","getCacheBustedUrl","now","Date","urlWithCacheBusting","search","isPathWhitelisted","whitelist","absoluteUrlString","length","path","some","whitelistedPathRegex","match","populateCurrentCacheNames","precacheConfig","cacheNamePrefix","baseUrl","absoluteUrlToCacheName","currentCacheNamesToAbsoluteUrl","forEach","cacheOption","absoluteUrl","stripIgnoredUrlParameters","ignoreUrlParametersMatching","split","kv","filter","every","ignoredRegex","test","join","mappings","location","AbsoluteUrlToCacheName","CurrentCacheNamesToAbsoluteUrl","addEventListener","event","waitUntil","allCacheNames","Object","indexOf","open","cache","request","Request","credentials","fetch","response","ok","put","console","error","status","skipWaiting","clients","claim","data","command","log","ports","postMessage","method","urlWithoutIgnoredParameters","directoryIndex","navigateFallback","headers","has","get","includes","navigateFallbackUrl","respondWith","Error","e","warn"],"mappings":"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","file":"service-worker.js","sourcesContent":["/**\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This generated service worker JavaScript will precache your site's resources.\n// The code needs to be saved in a .js file at the top-level of your site, and registered\n// from your pages in order to be used. See\n// https://github.com/googlechrome/sw-precache/blob/master/demo/app/js/service-worker-registration.js\n// for an example of how you can register this script and handle various service worker events.\n\n/* eslint-env worker, serviceworker */\n/* eslint-disable indent, no-unused-vars, no-multiple-empty-lines, max-nested-callbacks, space-before-function-paren */\n'use strict';\n\n\n\n\nimportScripts(\"assets/scripts/vendor/sw-toolbox.js\",\"assets/scripts/vendor/runtime-caching.js\");\n\n\n/* eslint-disable quotes, comma-spacing */\nvar PrecacheConfig = [[\"assets/images/test.png\",\"29cd71b7503223412af0739f56c8d7f7\"],[\"assets/images/wp.png\",\"dd48b1044a90d0c196d98a369e2fe62d\"],[\"assets/scripts/main.js\",\"792b8989989d26d887e4fef5fb5defda\"],[\"assets/scripts/vendor/bootstrap.min.js\",\"c5b5b2fa19bd66ff23211d9f844e0131\"],[\"assets/scripts/vendor/jquery.min.js\",\"33cabfa15c1060aaa3d207c653afb1ee\"],[\"assets/scripts/vendor/runtime-caching.js\",\"a56084c1d7dc8e5be9ef6e7b7fb1338c\"],[\"assets/scripts/vendor/sw-toolbox.js\",\"42dd9073ba0a0c8e0ae2230432870678\"],[\"assets/styles/fonts.css\",\"d41d8cd98f00b204e9800998ecf8427e\"],[\"assets/styles/main.css\",\"494a73bfd3b3cee3a75d96449f979a08\"],[\"index.html\",\"c7f4ecbc1389b36c815c9d19c7cf673a\"],[\"manifest.json\",\"0e9bd756acb9c618f360c0412da46dc8\"]];\n/* eslint-enable quotes, comma-spacing */\nvar CacheNamePrefix = 'sw-precache-v1-doc-sandbox-' + (self.registration ? self.registration.scope : '') + '-';\n\n\nvar IgnoreUrlParametersMatching = [/^utm_/];\n\n\n\nvar addDirectoryIndex = function (originalUrl, index) {\n    var url = new URL(originalUrl);\n    if (url.pathname.slice(-1) === '/') {\n      url.pathname += index;\n    }\n    return url.toString();\n  };\n\nvar getCacheBustedUrl = function (url, now) {\n    now = now || Date.now();\n\n    var urlWithCacheBusting = new URL(url);\n    urlWithCacheBusting.search += (urlWithCacheBusting.search ? '&' : '') +\n      'sw-precache=' + now;\n\n    return urlWithCacheBusting.toString();\n  };\n\nvar isPathWhitelisted = function (whitelist, absoluteUrlString) {\n    // If the whitelist is empty, then consider all URLs to be whitelisted.\n    if (whitelist.length === 0) {\n      return true;\n    }\n\n    // Otherwise compare each path regex to the path of the URL passed in.\n    var path = (new URL(absoluteUrlString)).pathname;\n    return whitelist.some(function(whitelistedPathRegex) {\n      return path.match(whitelistedPathRegex);\n    });\n  };\n\nvar populateCurrentCacheNames = function (precacheConfig,\n    cacheNamePrefix, baseUrl) {\n    var absoluteUrlToCacheName = {};\n    var currentCacheNamesToAbsoluteUrl = {};\n\n    precacheConfig.forEach(function(cacheOption) {\n      var absoluteUrl = new URL(cacheOption[0], baseUrl).toString();\n      var cacheName = cacheNamePrefix + absoluteUrl + '-' + cacheOption[1];\n      currentCacheNamesToAbsoluteUrl[cacheName] = absoluteUrl;\n      absoluteUrlToCacheName[absoluteUrl] = cacheName;\n    });\n\n    return {\n      absoluteUrlToCacheName: absoluteUrlToCacheName,\n      currentCacheNamesToAbsoluteUrl: currentCacheNamesToAbsoluteUrl\n    };\n  };\n\nvar stripIgnoredUrlParameters = function (originalUrl,\n    ignoreUrlParametersMatching) {\n    var url = new URL(originalUrl);\n\n    url.search = url.search.slice(1) // Exclude initial '?'\n      .split('&') // Split into an array of 'key=value' strings\n      .map(function(kv) {\n        return kv.split('='); // Split each 'key=value' string into a [key, value] array\n      })\n      .filter(function(kv) {\n        return ignoreUrlParametersMatching.every(function(ignoredRegex) {\n          return !ignoredRegex.test(kv[0]); // Return true iff the key doesn't match any of the regexes.\n        });\n      })\n      .map(function(kv) {\n        return kv.join('='); // Join each [key, value] array into a 'key=value' string\n      })\n      .join('&'); // Join the array of 'key=value' strings into a string with '&' in between each\n\n    return url.toString();\n  };\n\n\nvar mappings = populateCurrentCacheNames(PrecacheConfig, CacheNamePrefix, self.location);\nvar AbsoluteUrlToCacheName = mappings.absoluteUrlToCacheName;\nvar CurrentCacheNamesToAbsoluteUrl = mappings.currentCacheNamesToAbsoluteUrl;\n\nfunction deleteAllCaches() {\n  return caches.keys().then(function(cacheNames) {\n    return Promise.all(\n      cacheNames.map(function(cacheName) {\n        return caches.delete(cacheName);\n      })\n    );\n  });\n}\n\nself.addEventListener('install', function(event) {\n  var now = Date.now();\n\n  event.waitUntil(\n    caches.keys().then(function(allCacheNames) {\n      return Promise.all(\n        Object.keys(CurrentCacheNamesToAbsoluteUrl).filter(function(cacheName) {\n          return allCacheNames.indexOf(cacheName) === -1;\n        }).map(function(cacheName) {\n          var urlWithCacheBusting = getCacheBustedUrl(CurrentCacheNamesToAbsoluteUrl[cacheName],\n            now);\n\n          return caches.open(cacheName).then(function(cache) {\n            var request = new Request(urlWithCacheBusting, {credentials: 'same-origin'});\n            return fetch(request).then(function(response) {\n              if (response.ok) {\n                return cache.put(CurrentCacheNamesToAbsoluteUrl[cacheName], response);\n              }\n\n              console.error('Request for %s returned a response with status %d, so not attempting to cache it.',\n                urlWithCacheBusting, response.status);\n              // Get rid of the empty cache if we can't add a successful response to it.\n              return caches.delete(cacheName);\n            });\n          });\n        })\n      ).then(function() {\n        return Promise.all(\n          allCacheNames.filter(function(cacheName) {\n            return cacheName.indexOf(CacheNamePrefix) === 0 &&\n                   !(cacheName in CurrentCacheNamesToAbsoluteUrl);\n          }).map(function(cacheName) {\n            return caches.delete(cacheName);\n          })\n        );\n      });\n    }).then(function() {\n      if (typeof self.skipWaiting === 'function') {\n        // Force the SW to transition from installing -> active state\n        self.skipWaiting();\n      }\n    })\n  );\n});\n\nif (self.clients && (typeof self.clients.claim === 'function')) {\n  self.addEventListener('activate', function(event) {\n    event.waitUntil(self.clients.claim());\n  });\n}\n\nself.addEventListener('message', function(event) {\n  if (event.data.command === 'delete_all') {\n    console.log('About to delete all caches...');\n    deleteAllCaches().then(function() {\n      console.log('Caches deleted.');\n      event.ports[0].postMessage({\n        error: null\n      });\n    }).catch(function(error) {\n      console.log('Caches not deleted:', error);\n      event.ports[0].postMessage({\n        error: error\n      });\n    });\n  }\n});\n\n\nself.addEventListener('fetch', function(event) {\n  if (event.request.method === 'GET') {\n    var urlWithoutIgnoredParameters = stripIgnoredUrlParameters(event.request.url,\n      IgnoreUrlParametersMatching);\n\n    var cacheName = AbsoluteUrlToCacheName[urlWithoutIgnoredParameters];\n    var directoryIndex = 'index.html';\n    if (!cacheName && directoryIndex) {\n      urlWithoutIgnoredParameters = addDirectoryIndex(urlWithoutIgnoredParameters, directoryIndex);\n      cacheName = AbsoluteUrlToCacheName[urlWithoutIgnoredParameters];\n    }\n\n    var navigateFallback = '';\n    // Ideally, this would check for event.request.mode === 'navigate', but that is not widely\n    // supported yet:\n    // https://code.google.com/p/chromium/issues/detail?id=540967\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1209081\n    if (!cacheName && navigateFallback && event.request.headers.has('accept') &&\n        event.request.headers.get('accept').includes('text/html') &&\n        /* eslint-disable quotes, comma-spacing */\n        isPathWhitelisted([], event.request.url)) {\n        /* eslint-enable quotes, comma-spacing */\n      var navigateFallbackUrl = new URL(navigateFallback, self.location);\n      cacheName = AbsoluteUrlToCacheName[navigateFallbackUrl.toString()];\n    }\n\n    if (cacheName) {\n      event.respondWith(\n        // Rely on the fact that each cache we manage should only have one entry, and return that.\n        caches.open(cacheName).then(function(cache) {\n          return cache.keys().then(function(keys) {\n            return cache.match(keys[0]).then(function(response) {\n              if (response) {\n                return response;\n              }\n              // If for some reason the response was deleted from the cache,\n              // raise and exception and fall back to the fetch() triggered in the catch().\n              throw Error('The cache ' + cacheName + ' is empty.');\n            });\n          });\n        }).catch(function(e) {\n          console.warn('Couldn\\'t serve response for \"%s\" from cache: %O', event.request.url, e);\n          return fetch(event.request);\n        })\n      );\n    }\n  }\n});\n\n\n\n\n"]}